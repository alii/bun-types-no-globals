name: Update Bun Types

on:
  schedule:
    - cron: '0 0 * * *' # daily at 00:00 UTC
  workflow_dispatch:

jobs:
  update-types:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Process missing versions
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          echo "Fetching current canary version..."
          CANARY_VERSION=$(bun info @types/bun@canary version --json | jq -r '.')
          echo "Current @types/bun canary: $CANARY_VERSION"

          echo "Fetching all stable @types/bun versions..."
          STABLE_VERSIONS=$(bun info @types/bun versions --json | jq -r '.[]')

          echo "Fetching all bun-types-no-globals versions..."
          OUR_VERSIONS=$(bun info bun-types-no-globals versions --json 2>/dev/null | jq -r '.[]' || echo "")

          MISSING_VERSIONS=""
          for VERSION in $STABLE_VERSIONS; do
            if ! echo "$OUR_VERSIONS" | grep -q "^$VERSION$"; then
              MISSING_VERSIONS="$MISSING_VERSIONS $VERSION"
            fi
          done

          if ! echo "$OUR_VERSIONS" | grep -q "^$CANARY_VERSION$"; then
            MISSING_VERSIONS="$MISSING_VERSIONS $CANARY_VERSION"
          fi

          if [ -z "$MISSING_VERSIONS" ]; then
            echo "No missing versions to publish"
            exit 0
          fi

          echo "Missing versions to publish:$MISSING_VERSIONS"

          for VERSION in $MISSING_VERSIONS; do
            echo ""
            echo "Processing version: $VERSION"
            
            if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              INSTALL_TAG="$VERSION"
              PUBLISH_TAG="latest"
              echo "This is a stable release"
            else
              INSTALL_TAG="$VERSION"
              PUBLISH_TAG="canary"
              echo "This is a pre-release/canary version"
            fi
            
            echo "Running generator for $VERSION..."
            bun run generator/index.ts "$INSTALL_TAG"
            
            git add lib/ package.json
            git commit -m "chore: update bun types to v$VERSION [automated]" || {
              echo "No changes to commit for $VERSION"
              continue
            }
            
            git push
            
            echo "Publishing $VERSION to npm with tag: $PUBLISH_TAG (DRY RUN)"
            bun publish --tag="$PUBLISH_TAG" --access public --dry-run
            
            echo "Successfully processed $VERSION"
          done
